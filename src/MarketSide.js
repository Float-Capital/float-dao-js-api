// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Ethers = require("ethers");
var Ethers$FloatJsClient = require("./demo/Ethers.js");
var CONSTANTS$FloatJsClient = require("./demo/CONSTANTS.js");
var Contracts$FloatJsClient = require("./demo/Contracts.js");
var ConfigMain$FloatJsClient = require("./ConfigMain.js");

var min = Ethers$FloatJsClient.BigNumber.min;

function div(prim0, prim1) {
  return prim0.div(prim1);
}

function mul(prim0, prim1) {
  return prim0.mul(prim1);
}

function add(prim0, prim1) {
  return prim0.add(prim1);
}

function makeLongShortContract(providerOrSigner) {
  return Contracts$FloatJsClient.LongShort.make(Ethers.utils.getAddress(ConfigMain$FloatJsClient.polygonConfig.longShortContractAddress), providerOrSigner);
}

function syntheticTokenAddress(providerOrSigner, marketIndex, isLong) {
  return makeLongShortContract(providerOrSigner).syntheticTokens(marketIndex, isLong);
}

function syntheticTokenTotalSupply(providerOrSigner, marketIndex, isLong) {
  return syntheticTokenAddress(providerOrSigner, marketIndex, isLong).then(function (address) {
                  return Promise.resolve(Contracts$FloatJsClient.Synth.make(address, providerOrSigner));
                }).then(function (synth) {
                return synth.totalSupply();
              }).then(function (supply) {
              return supply;
            });
}

function marketSideValues(providerOrSigner, marketIndex) {
  return makeLongShortContract(providerOrSigner).marketSideValueInPaymentToken(marketIndex);
}

function marketSideValue(providerOrSigner, marketIndex, isLong) {
  return makeLongShortContract(providerOrSigner).marketSideValueInPaymentToken(marketIndex).then(function (marketSideValue) {
              if (isLong) {
                return marketSideValue.long;
              } else {
                return marketSideValue.short;
              }
            });
}

function marketSideUnconfirmedValues(providerOrSigner, marketIndex, isLong) {
  return makeLongShortContract(providerOrSigner).batched_amountPaymentToken_deposit(marketIndex, isLong);
}

function getSyntheticTokenPrice(providerOrSigner, marketIndex, isLong) {
  return Promise.all([
                marketSideValue(providerOrSigner, marketIndex, isLong),
                syntheticTokenTotalSupply(providerOrSigner, marketIndex, isLong)
              ]).then(function (param) {
              return param[0].mul(CONSTANTS$FloatJsClient.tenToThe18).div(param[1]);
            });
}

function getExposure(providerOrSigner, marketIndex, isLong) {
  return makeLongShortContract(providerOrSigner).marketSideValueInPaymentToken(marketIndex).then(function (values) {
              var numerator = min(values.long, values.short).mul(CONSTANTS$FloatJsClient.tenToThe18);
              if (isLong) {
                return numerator.div(values.long);
              } else {
                return numerator.div(values.short);
              }
            });
}

function getUnconfirmedExposure(providerOrSigner, marketIndex, isLong) {
  return Promise.all([
                makeLongShortContract(providerOrSigner).marketSideValueInPaymentToken(marketIndex),
                marketSideUnconfirmedValues(providerOrSigner, marketIndex, true),
                marketSideUnconfirmedValues(providerOrSigner, marketIndex, false)
              ]).then(function (param) {
              var values = param[0];
              var valueLong = values.long.add(param[1]);
              var valueShort = values.short.add(param[2]);
              var numerator = min(valueLong, valueShort).mul(CONSTANTS$FloatJsClient.tenToThe18);
              if (isLong) {
                return numerator.div(valueLong);
              } else {
                return numerator.div(valueShort);
              }
            });
}

function newFloatMarketSide(p, marketIndex, isLong) {
  return {
          getSyntheticTokenPrice: (function (param) {
              return getSyntheticTokenPrice(p, marketIndex, isLong);
            }),
          getExposure: (function (param) {
              return getExposure(p, marketIndex, isLong);
            }),
          getUnconfirmedExposure: (function (param) {
              return getUnconfirmedExposure(p, marketIndex, isLong);
            })
        };
}

var MarketSide = {
  makeLongShortContract: makeLongShortContract,
  syntheticTokenAddress: syntheticTokenAddress,
  syntheticTokenTotalSupply: syntheticTokenTotalSupply,
  marketSideValues: marketSideValues,
  marketSideValue: marketSideValue,
  marketSideUnconfirmedValues: marketSideUnconfirmedValues,
  getSyntheticTokenPrice: getSyntheticTokenPrice,
  getExposure: getExposure,
  getUnconfirmedExposure: getUnconfirmedExposure,
  newFloatMarketSide: newFloatMarketSide
};

exports.min = min;
exports.div = div;
exports.mul = mul;
exports.add = add;
exports.MarketSide = MarketSide;
/* ethers Not a pure module */
