// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Js_exn = require("rescript/lib/js/js_exn.js");
var Ethers = require("ethers");
var Belt_Int = require("rescript/lib/js/belt_Int.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var CONSTANTS$FloatJsClient = require("./CONSTANTS.js");

var env = process.env;

var match = env.PROVIDER_URL;

var match$1 = env.MNEMONIC;

var match$2 = env.ETHERSCAN_API_KEY;

var getSecrets;

var exit = 0;

if (match !== undefined && match$1 !== undefined && match$2 !== undefined) {
  getSecrets = {
    providerUrls: [Caml_option.valFromOption(match)],
    mnemonic: Caml_option.valFromOption(match$1),
    apiKey: Caml_option.valFromOption(match$2)
  };
} else {
  exit = 1;
}

if (exit === 1) {
  Js_exn.raiseError("`PROVIDER_URL`,`ETHERSCAN_API_KEY` & `MNEMONIC` must be specified in your environment");
  getSecrets = {
    providerUrls: [""],
    mnemonic: "mnemonic not configured",
    apiKey: ""
  };
}

var config = require(Belt_Option.getWithDefault(process.env.CONFIG_PATH, "../config.js"));

var defaultGasPriceInGwei = Belt_Option.getWithDefault(config.gasPrice.defaultGasPriceInGwei, 15.0);

var defaultMaxPriorityFeeInGwei = Belt_Option.getWithDefault(config.gasPrice.defaultMaxPriorityFeeInGwei, 35.0);

var webhookUrl = Belt_Option.getWithDefault(process.env.DISCORD_WEBHOOK_URI, "https://discord.com/api/webhooks/899598787159412766/LKQb25fFAZyTGquWTS__D8Ego1tWADebIjp1OWlywmCij3tXKFGsYaZI_d2S0sLUFJTR");

var debugWebhookUrl = Belt_Option.getWithDefault(process.env.DEBUG_DISCORD_WEBHOOK_URI, "https://discord.com/api/webhooks/907272357788397620/7L0aS-wMI6c-gmfyRMo9Fy4Ps18GOaA2lJkrsKmVqZXtvia9o_qIyXvlhD8EcqMGvagz");

var minGasPrice = Belt_Option.mapWithDefault(process.env.MIN_GAS_PRICE, Ethers.BigNumber.from(15), (function (gasPriceString) {
        return Ethers.BigNumber.from(gasPriceString);
      }));

var minimumMaxPriorityFee = Belt_Option.mapWithDefault(process.env.MIN_MAX_PRIORITY_FEE, Ethers.BigNumber.from(2), (function (gasPriceString) {
        return Ethers.BigNumber.from(gasPriceString).mul(CONSTANTS$FloatJsClient.oneGweiInWei);
      }));

var maxFeePerGas = Belt_Option.map(process.env.MAX_FEE_PER_GAS, (function (gasPriceString) {
        return Ethers.BigNumber.from(gasPriceString).mul(CONSTANTS$FloatJsClient.oneGweiInWei);
      }));

var maxPayableGasFee = Belt_Option.mapWithDefault(process.env.MAX_PAYABLE_GAS_FEE, Ethers.BigNumber.from(10000).mul(CONSTANTS$FloatJsClient.oneGweiInWei), (function (gasPriceString) {
        return Ethers.BigNumber.from(gasPriceString).mul(CONSTANTS$FloatJsClient.oneGweiInWei);
      }));

var maxPriorityFeeIncrement = Belt_Option.mapWithDefault(process.env.MAX_PRIORITY_FEE_INCREMENT, Ethers.BigNumber.from(10).mul(CONSTANTS$FloatJsClient.oneGweiInWei), (function (gasPriceString) {
        return Ethers.BigNumber.from(gasPriceString).mul(CONSTANTS$FloatJsClient.oneGweiInWei);
      }));

var logLevel = Belt_Option.getWithDefault(process.env.MSG_LOG_LEVEL, "info");

var botMode = Belt_Option.mapWithDefault(process.env.BACKUP_TIME_DELAY_SECONDS, /* MainNode */0, (function (backupTimeDelayInSecondsStr) {
        var backupTimeDelayInSeconds = Belt_Option.getWithDefault(Belt_Int.fromString(backupTimeDelayInSecondsStr), 45);
        return /* BackupNode */{
                _0: {
                  backupTimeDelayInSeconds: backupTimeDelayInSeconds
                }
              };
      }));

var botModeString = botMode ? "backup" : "main";

var secrets = getSecrets;

exports.env = env;
exports.getSecrets = getSecrets;
exports.secrets = secrets;
exports.config = config;
exports.defaultGasPriceInGwei = defaultGasPriceInGwei;
exports.defaultMaxPriorityFeeInGwei = defaultMaxPriorityFeeInGwei;
exports.webhookUrl = webhookUrl;
exports.debugWebhookUrl = debugWebhookUrl;
exports.minGasPrice = minGasPrice;
exports.minimumMaxPriorityFee = minimumMaxPriorityFee;
exports.maxFeePerGas = maxFeePerGas;
exports.maxPayableGasFee = maxPayableGasFee;
exports.maxPriorityFeeIncrement = maxPriorityFeeIncrement;
exports.logLevel = logLevel;
exports.botMode = botMode;
exports.botModeString = botModeString;
/* env Not a pure module */
