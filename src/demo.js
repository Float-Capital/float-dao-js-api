// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("rescript/lib/js/curry.js");
var Ethers = require("ethers");
var SecretsManagerJs = require("../secretsManager.js");
var CONSTANTS$FloatJsClient = require("./demo/CONSTANTS.js");
var MarketSide$FloatJsClient = require("./MarketSide.js");

var env = process.env;

var mnemonic = SecretsManagerJs.mnemonic;

var providerUrl = SecretsManagerJs.providerUrl;

function connectToNewWallet(provider, mnemonic) {
  return new (Ethers.Wallet.fromMnemonic)(mnemonic, "m/44'/60'/0'/0/0").connect(provider);
}

function run(param) {
  var marketSide = MarketSide$FloatJsClient.makeWithProvider(new (Ethers.providers.JsonRpcProvider)(providerUrl, 137), Ethers.BigNumber.from(1), false);
  var maxFeePerGas = Ethers.BigNumber.from(62).mul(CONSTANTS$FloatJsClient.oneGweiInWei);
  var maxPriorityFeePerGas = Ethers.BigNumber.from(34).mul(CONSTANTS$FloatJsClient.oneGweiInWei);
  var gasLimit = Ethers.BigNumber.from(1000000);
  var txOptions_maxFeePerGas = maxFeePerGas.toString();
  var txOptions_maxPriorityFeePerGas = maxPriorityFeePerGas.toString();
  var txOptions_gasLimit = gasLimit.toString();
  var txOptions = {
    maxFeePerGas: txOptions_maxFeePerGas,
    maxPriorityFeePerGas: txOptions_maxPriorityFeePerGas,
    gasLimit: txOptions_gasLimit
  };
  Curry._1(marketSide.getUnconfirmedExposure, undefined).then(function (a) {
        console.log(a.toString());
        
      });
  Curry._1(marketSide.getExposure, undefined).then(function (a) {
        console.log(a.toString());
        
      });
  Curry._1(marketSide.getPositions, Ethers.utils.getAddress("0x380d3d688fd65ef6858f0e094a1a9bba03ad76a3")).then(function (a) {
        console.log(a.synthToken.toString());
        
      });
  var marketSideConnected = Curry._1(marketSide.connect, connectToNewWallet(new (Ethers.providers.JsonRpcProvider)(providerUrl, 137), mnemonic));
  return Curry._2(marketSideConnected.shift, Ethers.BigNumber.from(1).mul(CONSTANTS$FloatJsClient.tenToThe18), txOptions).then(function (tx) {
              console.log(tx.hash);
              
            });
}

run(undefined);

exports.env = env;
exports.mnemonic = mnemonic;
exports.providerUrl = providerUrl;
exports.connectToNewWallet = connectToNewWallet;
exports.run = run;
/* env Not a pure module */
